/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.ipn.dbst.ui;

import ipn.mx.dbst.controlador.PrestamoCon;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.ipn.dbst.model.*;

/**
 *
 * @author angeldlr
 */
public class MostrarPrestamosView extends javax.swing.JFrame {

    /**
     * Creates new form MostrarPrestamos
     */
    private List<Sucursal> listSucursales;
    private List<Lector> listLectores;
    DefaultTableModel model = new DefaultTableModel();
    public MostrarPrestamosView() {
        initComponents();
        model.setColumnIdentifiers(new String[] {"Número de tarjeta","Nombre","idLibro","Título","Autor","idSucursal","Sucursal"});
        tbPrestamos.setModel(model);
        addSuc();
        addLectores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void addSuc(){
        PrestamoCon querySuc = new PrestamoCon();
        Connection con = querySuc.getConection();
        try {
            listSucursales = querySuc.getSucursales(con);
        } catch (SQLException ex) {
            Logger.getLogger(RealizarPrestamoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(int i=0;i<listSucursales.size();i++)
            cbSucursales.addItem(listSucursales.get(i).getNombreSucursal());
    }
    private void addLectores(){
        PrestamoCon querySuc = new PrestamoCon();
        Connection con = querySuc.getConection();
        try {
            listLectores = querySuc.getLectores(con);
        } catch (SQLException ex) {
            Logger.getLogger(RealizarPrestamoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(int i=0;i<listLectores.size();i++){
            int numL= listLectores.get(i).getNumTarjeta();
            String nom = listLectores.get(i).getNombre();
            cbLectores.addItem(nom+",Número de lector: "+numL);
        }
            
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbPrestamos = new javax.swing.JTable();
        cbSucursales = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbLectores = new javax.swing.JComboBox<>();
        btnShwPrestamos = new javax.swing.JButton();

        setTitle("LISTADO PRESTAMOS");

        jScrollPane1.setViewportView(tbPrestamos);

        cbSucursales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSucursalesActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("FreeSans", 1, 18)); // NOI18N
        jLabel1.setText("Prestamos sucursal :");

        jLabel2.setFont(new java.awt.Font("FreeSans", 1, 18)); // NOI18N
        jLabel2.setText("Prestamos por lector :");

        cbLectores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLectoresActionPerformed(evt);
            }
        });

        btnShwPrestamos.setText("Mostrar todos los prestamos");
        btnShwPrestamos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShwPrestamosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnShwPrestamos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbLectores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbSucursales, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 911, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSucursales, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbLectores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(btnShwPrestamos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShwPrestamosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShwPrestamosActionPerformed
        PrestamoCon shwpres = new PrestamoCon();
        Connection con = shwpres.getConection();
        
        //
        try {
            List<String[]> prestamos = shwpres.getAllPrestamos(con);
            if(prestamos != null){
                Object[] tuples = new Object[8];
                model = new DefaultTableModel();
                tbPrestamos.setModel(new DefaultTableModel());
                model.setColumnIdentifiers(new String[] {"Número de tarjeta","Nombre","idLibro","Título","Autor","idSucursal","Sucursal"});
                tbPrestamos.setModel(model);
                for(int i=0; i<prestamos.size() ; i++){
                    tuples[0] = prestamos.get(i)[0];
                    tuples[1] = prestamos.get(i)[1];
                    tuples[2] = prestamos.get(i)[2];
                    tuples[3] = prestamos.get(i)[3];
                    tuples[4] = prestamos.get(i)[4];
                    tuples[5] = prestamos.get(i)[5];
                    tuples[6] = prestamos.get(i)[6];
                    model.addRow(tuples);
                    
                }
            }else{
                JOptionPane.showMessageDialog(null, "No hay Prestamos aún!!!", "INFO PRESTAMO",JOptionPane.INFORMATION_MESSAGE);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(MostrarPrestamosView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnShwPrestamosActionPerformed

    private void cbSucursalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSucursalesActionPerformed
        
        PrestamoCon shwpres = new PrestamoCon();
        Connection con = shwpres.getConection();
        //
        try {
            List<String[]> prestamos = shwpres.getSucPrestamos(con,listSucursales.get(cbSucursales.getSelectedIndex()));
            if(prestamos != null){
                Object[] tuples = new Object[8];
                model = new DefaultTableModel();
                tbPrestamos.setModel(new DefaultTableModel());
                model.setColumnIdentifiers(new String[] {"Número de tarjeta","Nombre","idLibro","Título","Autor","idSucursal","Sucursal"});
                tbPrestamos.setModel(model);
                for(int i=0; i<prestamos.size() ; i++){
                    tuples[0] = prestamos.get(i)[0];
                    tuples[1] = prestamos.get(i)[1];
                    tuples[2] = prestamos.get(i)[2];
                    tuples[3] = prestamos.get(i)[3];
                    tuples[4] = prestamos.get(i)[4];
                    tuples[5] = prestamos.get(i)[5];
                    tuples[6] = prestamos.get(i)[6];
                    model.addRow(tuples);
                    
                }
            }else{
                JOptionPane.showMessageDialog(null, "No hay Prestamos aún!!!", "INFO PRESTAMO",JOptionPane.INFORMATION_MESSAGE);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(MostrarPrestamosView.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_cbSucursalesActionPerformed

    private void cbLectoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLectoresActionPerformed
        PrestamoCon shwpres = new PrestamoCon();
        Connection con = shwpres.getConection();
        //
        try {
            List<String[]> prestamos = shwpres.getLecPrestamos(con,listLectores.get(cbLectores.getSelectedIndex()));
            if(prestamos != null){
                Object[] tuples = new Object[8];
                model = new DefaultTableModel();
                tbPrestamos.setModel(new DefaultTableModel());
                model.setColumnIdentifiers(new String[] {"Número de tarjeta","Nombre","idLibro","Título","Autor","idSucursal","Sucursal"});
                tbPrestamos.setModel(model);
                for(int i=0; i<prestamos.size() ; i++){
                    tuples[0] = prestamos.get(i)[0];
                    tuples[1] = prestamos.get(i)[1];
                    tuples[2] = prestamos.get(i)[2];
                    tuples[3] = prestamos.get(i)[3];
                    tuples[4] = prestamos.get(i)[4];
                    tuples[5] = prestamos.get(i)[5];
                    tuples[6] = prestamos.get(i)[6];
                    model.addRow(tuples);
                    
                }
            }else{
                JOptionPane.showMessageDialog(null, "No hay Prestamos aún!!!", "INFO PRESTAMO",JOptionPane.INFORMATION_MESSAGE);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(MostrarPrestamosView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbLectoresActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnShwPrestamos;
    private javax.swing.JComboBox<String> cbLectores;
    private javax.swing.JComboBox<String> cbSucursales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbPrestamos;
    // End of variables declaration//GEN-END:variables
}
