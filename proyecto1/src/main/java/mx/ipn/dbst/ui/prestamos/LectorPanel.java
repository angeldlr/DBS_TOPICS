/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mx.ipn.dbst.ui.prestamos;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import mx.ipn.dbst.controlador.PrestamoCon;
import mx.ipn.dbst.model.Lector;
import mx.ipn.dbst.model.Libro;
import mx.ipn.dbst.model.Sucursal;
import mx.ipn.dbst.ui.Conexion;

/**
 *
 * @author angeldlr
 */
public class LectorPanel extends javax.swing.JPanel {

    /**
     * Creates new form LectorPanel
     */
    private List<Lector> listLectores;
    DefaultTableModel model = new DefaultTableModel();

    public LectorPanel() {
        initComponents();
        model.setColumnIdentifiers(new String[]{"Número de tarjeta", "Nombre", "Dirección", "Teléfono"});
        tbLectores.setModel(model);
        addLectores();
    }

    private void addLectores() {
        PrestamoCon querySuc = new PrestamoCon();
        Conexion c = new Conexion();

        try {
            Connection con = c.crearConexion();
            listLectores = querySuc.getLectores(con);
        } catch (SQLException ex) {
            Logger.getLogger(RealizarPrestamoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < listLectores.size(); i++) {
            int numL = listLectores.get(i).getNumTarjeta();
            String nom = listLectores.get(i).getNombre();
            cbLectores.addItem(String.valueOf(numL));
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNombre = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnnuevoLector = new javax.swing.JButton();
        btnDrop = new javax.swing.JButton();
        btnShwlectores = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbLectores = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        cbLectores = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setText("Nombre:");

        jLabel2.setText("Dirección:");

        jLabel3.setText("Teléfono:");

        btnnuevoLector.setText("Registrar");
        btnnuevoLector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnuevoLectorActionPerformed(evt);
            }
        });

        btnDrop.setText("Borrar Lector");
        btnDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDropActionPerformed(evt);
            }
        });

        btnShwlectores.setText("Mostrar Lectores");
        btnShwlectores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShwlectoresActionPerformed(evt);
            }
        });

        tbLectores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbLectores);

        btnUpdate.setText("Actualizar");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        cbLectores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLectoresActionPerformed(evt);
            }
        });

        jLabel4.setText("Busqueda por tarjeta:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbLectores, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(btnnuevoLector, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnShwlectores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDrop))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombre)
                            .addComponent(txtDireccion)
                            .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbLectores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnnuevoLector)
                    .addComponent(btnDrop)
                    .addComponent(btnShwlectores)
                    .addComponent(btnUpdate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnShwlectoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShwlectoresActionPerformed
        PrestamoCon shwpres = new PrestamoCon();
        Conexion c = new Conexion();
        //
        try {
            Connection con = c.crearConexion();
            List<Lector> lectores = shwpres.getLectores(con);
            model = new DefaultTableModel();
            tbLectores.setModel(new DefaultTableModel());
            model.setColumnIdentifiers(new String[]{"Número de tarjeta", "Nombre", "Dirección", "Teléfono"});
            tbLectores.setModel(model);
            if (lectores != null) {

                for (int i = 0; i < lectores.size(); i++) {
                    int numTarjeta = lectores.get(i).getNumTarjeta();
                    String nombre = lectores.get(i).getNombre();
                    String direccion = lectores.get(i).getDireccion();
                    String telefono = lectores.get(i).getTelefono();
                    Object[] tuples = {numTarjeta, nombre, direccion, telefono};
                    model.addRow(tuples);

                }
            } else {
                JOptionPane.showMessageDialog(null, "No hay Prestamos aún!!!", "INFO PRESTAMO", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(MostrarPrestamosView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnShwlectoresActionPerformed

    private void btnnuevoLectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnuevoLectorActionPerformed
        Lector lec = new Lector(0, txtNombre.getText(), txtDireccion.getText(), txtTelefono.getText());
        PrestamoCon querySuc = new PrestamoCon();
        Conexion c = new Conexion();
        try {
            Connection con = c.crearConexion();
            if (querySuc.newLector(con, lec)) {
                JOptionPane.showMessageDialog(null, "El lector " + lec.getNombre() + " ha sido registrado", "INFO Lector", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Error al regitrar", "INFO Lecotr", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(DevolucionView.class.getName()).log(Level.SEVERE, null, ex);
        }
        addLectores();
    }//GEN-LAST:event_btnnuevoLectorActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        Lector lec = listLectores.get(cbLectores.getSelectedIndex());
        lec.setNombre(txtNombre.getText());
        lec.setDireccion(txtDireccion.getText());
        lec.setTelefono(txtTelefono.getText());
        PrestamoCon querySuc = new PrestamoCon();
        Conexion c = new Conexion();
        
        try {
            Connection con = c.crearConexion();
            if (querySuc.updtLector(con, lec)) {
                JOptionPane.showMessageDialog(null, "El lectr ha sido actualizado", "INFO Lector", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Error al actualizar", "INFO Lector", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(DevolucionView.class.getName()).log(Level.SEVERE, null, ex);
        }
        addLectores();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void cbLectoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLectoresActionPerformed
        Lector lec;
        PrestamoCon querySuc = new PrestamoCon();
        Conexion c = new Conexion();
        
        try {
            Connection con = c.crearConexion();
            lec = querySuc.getLector(con, listLectores.get(cbLectores.getSelectedIndex()).getNumTarjeta());
            if (lec != null) {
                System.out.println(lec.getNombre());
                txtNombre.setText(lec.getNombre());
                txtDireccion.setText(lec.getDireccion());
                txtTelefono.setText(lec.getTelefono());
            } else {
                JOptionPane.showMessageDialog(null, "No se encuntra ese lector", "INFO PRESTAMO", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(DevolucionView.class.getName()).log(Level.SEVERE, null, ex);
        }
        addLectores();
    }//GEN-LAST:event_cbLectoresActionPerformed

    private void btnDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDropActionPerformed
        Lector lec = listLectores.get(cbLectores.getSelectedIndex());
        PrestamoCon querySuc = new PrestamoCon();
        Conexion c = new Conexion();
        
        try {
            Connection con = c.crearConexion();
            if (querySuc.rmLector(con, lec)) {
                System.out.println(lec.getNombre());
                txtNombre.setText(lec.getNombre());
                txtDireccion.setText(lec.getDireccion());
                txtTelefono.setText(lec.getTelefono());
            } else {
                JOptionPane.showMessageDialog(null, "No se encuntra ese lector", "INFO PRESTAMO", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (SQLException ex) {
            Logger.getLogger(DevolucionView.class.getName()).log(Level.SEVERE, null, ex);
        }
        cbLectores.removeItemAt(cbLectores.getSelectedIndex());
    }//GEN-LAST:event_btnDropActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDrop;
    private javax.swing.JButton btnShwlectores;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnnuevoLector;
    private javax.swing.JComboBox<String> cbLectores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbLectores;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
